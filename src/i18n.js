import i18n from "i18next";
import { initReactI18next } from "react-i18next";

const resources = {
  en: {
    translation: {
      header: {
        forms: "Forms",
        adminPage: "Admin Page",
        signUp: "Sign up",
        logIn: "Log in",
        logOut: "Log out",
        search: "Search",
      },
      formCreation: {
        form: "Form",
        header: "Header",
      },
      forms: {
        myForms: "My Forms",
        newForm: "New Form",
        noForms: "No Forms Yet.",
        createdAt: "Created at",
        filledForms: "Filled Forms",
        noFilledForms: "No filled forms found.",
        submittedOn: "Submitted on",
        viewForm: "View Form",
        homeNotLoggedIn:
          "Log in to Create forms, Fill forms. You can use Search to read forms.",
      },
      userManagement: {
        title: "Users Management",
        delete: "Delete",
        block: "Block",
        unblock: "Unblock",
        makeAdmin: "Make Admin",
        removeAdmin: "Remove Admin",
        name: "Name",
        email: "Email",
        admin: "Admin",
        blocked: "Blocked",
        updatedAt: "Updated At",
        createdAt: "Created At",
        yes: "Yes",
        no: "No",
      },
      auth: {
        signUp: "Sign Up",
        login: "Login",
        name: "Name",
        email: "Email",
        password: "Password",
        submitting: "Submitting...",
        alreadyHaveAccount: "Already have an Account? Log in!",
        dontHaveAccount: "Don't have an account? Sign up!",
      },
      error: {
        pageDoesntExist: "Page doesn't exist",
      },
      tagCloud: {
        button: "Tag Cloud",
        modalTitle: "Tag Cloud (Alphabetically)",
        loading: "Loading...",
        noTagsFound: "No tags found",
        formsFor: "Forms for",
        closeButton: "×",
      },
      userList: {
        removeButton: "Remove",
        searchHint:
          'Type name or email to search for users, (e.g. "Daniil" or "test@test.com", minimum 3 characters for suggestions)',
      },
      form: {
        title: "Form",
        header: "Header",
        questions: "Questions",
        quizHint:
          "Quiz Forms sum up the scores of each question to give a total score of 100.",
        addQuestionButton: "Add Question",
        cancelButton: "Cancel",
        uploadButton: "Upload",
      },
      newFormHeader: {
        imagePreview: "Preview:",
        noImageSelected: "No image selected yet.",
        formType: "Form Type",
        form: "Form",
        quiz: "Quiz",
        titleLabel: "Title",
        titlePlaceholder: "Form Title",
        descriptionLabel: "Description",
        descriptionPlaceholder: "Form Description",
        topicLabel: "Topic",
        topicPlaceholder: "Form Topic",
        tagsLabel: "Tags",
        tagsHint:
          "Type tags divided with space, and each tag should start with # (e.g. '#development #job')",
        tagsPlaceholder: "Tags",
        suggestions: "Suggestions:",
        accessLabel: "Access:",
        public: "Public",
        private: "Private",
        imageLabel: "Upload Image"
      },
      newFormQuestion: {
        questionTitle: "Question",
        showInResults: "Show in Results",
        type: "Type",
        shortAnswer: "Short Answer",
        paragraph: "Paragraph",
        multipleChoice: "Multiple Choice",
        checkboxes: "Checkboxes",
        dropdown: "Dropdown",
        questionPlaceholder: "Question",
        withScore: "With Score",
        scoreLabel: "SCORE:",
        correctAnswerPlaceholder: "Correct Answer",
        duplicateQuestion: "Duplicate question",
        required: "Required",
        delete: "Delete",
        untitledQuestion: "Untitled Question",
      },
      newFormOptions: {
        correctAnswerOption: "Select the correct answer option",
      },
      comments: {
        leaveComment: "Leave Comment",
        yourComment: "Your Comment...",
        comments: "Comments:",
        noCommentsFound: "No comments found.",
        delete: "Delete",
      },
      fillForm: {
        title: "Title",
        description: "Description",
        email: "Email (filled automatically)",
        date: "Date (filled automatically)",
        submit: "Submit",
        editForm: "Edit Form",
        formSubmitted: "Form Submitted",
        youDontHaveAccess: "You don't have access to this form.",
        alreadySubmitted: "You have already filled this form.",
        refillPrompt: "Fill the form again?",
        refillButton: "Delete and Fill again",
        failedToDelete: "Failed to delete the filled form.",
        DeletedFilledForm: "Filled form deleted successfully.",
        errorWhileDeleting: "An error occurred while deleting the filled form.",
        failedToCheckSubmission: "Failed to fetch submission status.",
        errorCheckingSubmission: "Error checking submission status:",
      },
      fillFormQuestions: {
        yourAnswer: "Your Answer",
        selectAnOption: "Select an option",
        requiredQuestionsMarked: "Required questions are marked with",
        fillAllRequiredFields: "Fill all required fields",
      },
      latestTemplates: {
        latestTemplates: "Latest Templates",
        noTemplatesFound: "No templates found.",
        fillForm: "Fill Form",
      },
      newFormOption: {
        shortPlaceholder: "Short answer text",
        paragraphPlaceholder: "Paragraph",
        addOption: "Add Option",
      },
      popularForms: {
        popularTemplates: "Popular Templates",
        noTemplatesFound: "No templates found.",
        fillForm: "Fill Form",
      },
      loading: {
        loading: "Loading...",
      },
      sortableNewFormOption: {
        optionTextPlaceholder: "Option text",
        removeTooltip: "Remove",
      },
      viewFilledForm: {
        goBack: "Go back",
        readForms: "Read forms",
        dateSubmitted: "Date Submitted",
        viewInReadMode: "View in read mode",
      },
      notifications: {
        loggedIn: "Logged in successfully.",
        loggedOut: "Logged out successfully.",
        signUp: "Signed up successfully.",
        errorLoggingIn: "Error logging in.",
        errorSigningUp: "Error signing up.",
        wrongPasswordOrEmail: "Wrong password or email.",
        userIsBlocked: "User is blocked.",
      },
      questionStats: {
        formStatistics: "Form Statistics",
        questionTypeDistribution: "Question Type Distribution",
        questionCount: "Question Count",
        questionTypes: "Question Types",
        topResponses: "Top Responses",
        noResponses: "No responses found.",
        unsupportedQuestionType: "Unsupported question type",
      },
      formEditingPage: {
        form: "Form",
        responses: "Responses",
        header: "Header",
        questions: "Questions",
        cancel: "Cancel",
        delete: "Delete",
        update: "Update",
      },
      responses: {
        amountUsersLiked: "Users liked this form",
        amountUsersCommented: "Users commented on this form",
      },
      successPage: {
        successMessage: "Successfully submitted!",
        goHome: "Home Page",
      },
    },
  },
  ru: {
    translation: {
      header: {
        forms: "Формы",
        adminPage: "Панель Админа",
        signUp: "Регистрация",
        logIn: "Войти",
        logOut: "Выйти",
        search: "Поиск",
      },
      formCreation: {},
      forms: {
        myForms: "Мои Формы",
        newForm: "Новая Форма",
        noForms: "Форм пока нет.",
        createdAt: "Создано",
        filledForms: "Заполненные Формы",
        noFilledForms: "Заполненные формы не найдены.",
        submittedOn: "Отправлено",
        viewForm: "Просмотреть Форму",
        homeNotLoggedIn:
          "Войдите, чтобы создавать формы и заполнять их. Вы можете использовать поиск для чтения форм.",
      },
      userManagement: {
        title: "Управление Пользователями",
        delete: "Удалить",
        block: "Заблокировать",
        unblock: "Разблокировать",
        makeAdmin: "Сделать Админом",
        removeAdmin: "Убрать Админа",
        name: "Имя",
        email: "Электронная Почта",
        admin: "Админ",
        blocked: "Заблокирован",
        updatedAt: "Обновлено",
        createdAt: "Создано",
        yes: "Да",
        no: "Нет",
      },
      auth: {
        signUp: "Регистрация",
        login: "Войти",
        name: "Имя",
        email: "Электронная Почта",
        password: "Пароль",
        submitting: "Отправка...",
        alreadyHaveAccount: "Уже есть аккаунт? Войдите!",
        dontHaveAccount: "Нет аккаунта? Зарегистрируйтесь!",
      },
      error: {
        pageDoesntExist: "Страница не существует",
      },
      tagCloud: {
        button: "Облако тегов",
        modalTitle: "Облако тегов (по алфавиту)",
        loading: "Загрузка...",
        noTagsFound: "Теги не найдены",
        formsFor: "Формы для",
        closeButton: "×",
      },
      userList: {
        removeButton: "Удалить",
        searchHint:
          'Введите имя или электронную почту для поиска пользователей (например, "Даниил" или "test@test.com", минимум 3 символа для предложений)',
      },
      form: {
        title: "Форма",
        header: "Заголовок",
        questions: "Вопросы",
        quizHint:
          "Опросы суммируют баллы за каждый вопрос, чтобы получить общий счет 100.",
        addQuestionButton: "Добавить вопрос",
        cancelButton: "Отмена",
        uploadButton: "Загрузить",
      },
      newFormHeader: {
        imagePreview: "Предпросмотр:",
        noImageSelected: "Изображение еще не выбрано.",
        formType: "Тип формы",
        form: "Форма",
        quiz: "Викторина",
        titleLabel: "Заголовок",
        titlePlaceholder: "Заголовок формы",
        descriptionLabel: "Описание",
        descriptionPlaceholder: "Описание формы",
        topicLabel: "Тема",
        topicPlaceholder: "Тема формы",
        tagsLabel: "Теги",
        tagsHint:
          "Введите теги, разделенные пробелами, и каждый тег должен начинаться с # (например, '#разработка #работа')",
        tagsPlaceholder: "Теги",
        suggestions: "Предложения:",
        accessLabel: "Доступ:",
        public: "Публичный",
        private: "Приватный",
        imageLabel: "Загрузить Изображение"
      },
      newFormQuestion: {
        questionTitle: "Вопрос",
        showInResults: "Показать в результатах",
        type: "Тип",
        shortAnswer: "Короткий ответ",
        paragraph: "Абзац",
        multipleChoice: "Множественный выбор",
        checkboxes: "Флажки",
        dropdown: "Выпадающий список",
        questionPlaceholder: "Вопрос",
        withScore: "С баллами",
        scoreLabel: "БАЛЛЫ:",
        correctAnswerPlaceholder: "Правильный ответ",
        duplicateQuestion: "Дублировать вопрос",
        required: "Обязательный",
        delete: "Удалить",
        untitledQuestion: "Безымянный вопрос",
      },
      newFormOptions: {
        correctAnswerOption: "Выберите правильный вариант ответа",
      },
      comments: {
        leaveComment: "Оставить комментарий",
        yourComment: "Ваш комментарий...",
        comments: "Комментарии:",
        noCommentsFound: "Комментарии не найдены.",
        delete: "Удалить",
      },
      fillForm: {
        title: "Название",
        description: "Описание",
        email: "Электронная почта (заполняется автоматически)",
        date: "Дата (заполняется автоматически)",
        submit: "Отправить",
        editForm: "Редактировать форму",
        formSubmitted: "Форма отправлена",
        youDontHaveAccess: "У вас нет доступа к этой форме.",
        alreadySubmitted: "Вы уже заполнили эту форму.",
        refillPrompt: "Заполнить форму заново?",
        refillButton: "Удалить и Заполнить заново",
        failedToDelete: "Не удалось удалить заполненную форму.",
        deletedFilledForm: "Заполненная форма успешно удалена.",
        errorWhileDeleting: "Произошла ошибка при удалении заполненной формы.",
        failedToCheckSubmission: "Не удалось проверить статус заполнения",
        errorCheckingSubmission: "Ошибка при проверки статуса заполнения:",
      },
      fillFormQuestions: {
        yourAnswer: "Ваш ответ",
        selectAnOption: "Выберите вариант",
        requiredQuestionsMarked: "Обязательные вопросы помечены с",
        fillAllRequiredFields: "Заполните все обязательные поля",
      },
      latestTemplates: {
        latestTemplates: "Последние Шаблоны",
        noTemplatesFound: "Шаблоны не найдены.",
        fillForm: "Заполнить Форму",
      },
      newFormOption: {
        shortPlaceholder: "Короткий ответ",
        paragraphPlaceholder: "Абзац",
        addOption: "Добавить ответ",
      },
      popularForms: {
        popularTemplates: "Популярные Шаблоны",
        noTemplatesFound: "Шаблоны не найдены.",
        fillForm: "Заполнить Форму",
      },
      loading: {
        loading: "Загрузка...",
      },
      sortableNewFormOption: {
        optionTextPlaceholder: "Текст ответа",
        removeTooltip: "Удалить",
      },
      viewFilledForm: {
        goBack: "Назад",
        readForms: "Читать формы",
        dateSubmitted: "Дата отправки",
        viewInReadMode: "Просмотр в режиме чтения",
      },
      notifications: {
        loggedIn: "Успешный вход.",
        loggedOut: "Успешный выход.",
        signUp: "Успешная регистрация.",
        errorLoggingIn: "Ошибка входа.",
        errorSigningUp: "Ошибка регистрации.",
        wrongPasswordOrEmail: "Неверный пароль или электронная почта.",
        userIsBlocked: "Пользователь заблокирован.",
      },
      questionStats: {
        formStatistics: "Статистика Формы",
        questionTypeDistribution: "Распределение Типов Вопросов",
        questionCount: "Количество Вопросов",
        questionTypes: "Типы Вопросов",
        topResponses: "Наиболее Популярные Ответы",
        unsupportedQuestionType: "Неподдерживаемый тип вопроса",
      },
      formEditingPage: {
        form: "Форма",
        responses: "Ответы",
        header: "Заголовок",
        questions: "Вопросы",
        cancel: "Отмена",
        delete: "Удалить",
        update: "Обновить",
      },
      responses: {
        amountUsersLiked: "Пользователей оценили эту форму",
        amountUsersCommented: "Пользователей прокомментировали эту форму",
      },
      successPage: {
        successMessage: "Успешно отправлено!",
        goHome: "На Главную",
      },
    },
  },
};

i18n.use(initReactI18next).init({
  resources,
  lng: "en",
  fallbackLng: "en",
  interpolation: {
    escapeValue: false,
  },
});

export default i18n;
